// Code generated by protoc-gen-go.
// source: DataSource.proto
// DO NOT EDIT!

package chevalier

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// Returned as a response to the chevalier client.
type DataSourceBurst struct {
	Sources          []*DataSource `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	Error            *string       `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DataSourceBurst) Reset()         { *m = DataSourceBurst{} }
func (m *DataSourceBurst) String() string { return proto.CompactTextString(m) }
func (*DataSourceBurst) ProtoMessage()    {}

func (m *DataSourceBurst) GetSources() []*DataSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *DataSourceBurst) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type DataSource struct {
	Source           []*DataSource_Tag `protobuf:"bytes,1,rep,name=source" json:"source,omitempty"`
	Address          *uint64           `protobuf:"fixed64,3,opt,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DataSource) Reset()         { *m = DataSource{} }
func (m *DataSource) String() string { return proto.CompactTextString(m) }
func (*DataSource) ProtoMessage()    {}

func (m *DataSource) GetSource() []*DataSource_Tag {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DataSource) GetAddress() uint64 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

type DataSource_Tag struct {
	Field            *string `protobuf:"bytes,1,req,name=field" json:"field,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DataSource_Tag) Reset()         { *m = DataSource_Tag{} }
func (m *DataSource_Tag) String() string { return proto.CompactTextString(m) }
func (*DataSource_Tag) ProtoMessage()    {}

func (m *DataSource_Tag) GetField() string {
	if m != nil && m.Field != nil {
		return *m.Field
	}
	return ""
}

func (m *DataSource_Tag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
}
